{"ast":null,"code":"var _jsxFileName = \"/Users/shiyo/React/guide/10_functional_programming/src/010_data_procedure/end/Example.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  // POINT 関数型\n  // （値の）状態と処理を分離して管理\n  // A(data) -> B(data) -> C(data) -> 結果\n  // ★ 状態と処理は切り離す\n  const nums = [1, 2, 3];\n  const sum = arry => arry.reduce((accu, curr) => accu + curr);\n\n  // POINT オブジェクト指向型\n  // 状態（データ）と処理を対で管理\n  // obj.method(); -> 結果\n  const numObj = {\n    nums: [1, 2, 3],\n    sum() {\n      const nums = this.nums;\n      let sumValue = 0;\n      for (let i = 0; i < nums.length; i++) {\n        sumValue += nums[i];\n      }\n      return sumValue;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u30AA\\u30D6\\u30B8\\u30A7\\u30AF\\u30C8\\u6307\\u5411\\u578B:\", numObj.sum()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u95A2\\u6570\\u578B:\", sum(nums)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["Example","nums","sum","arry","reduce","accu","curr","numObj","sumValue","i","length","_jsxDEV","_Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shiyo/React/guide/10_functional_programming/src/010_data_procedure/end/Example.js"],"sourcesContent":["const Example = () => {\n  // POINT 関数型\n  // （値の）状態と処理を分離して管理\n  // A(data) -> B(data) -> C(data) -> 結果\n  // ★ 状態と処理は切り離す\n  const nums = [1,2,3];\n  const sum = (arry) => arry.reduce((accu, curr) => accu + curr)\n\n  // POINT オブジェクト指向型\n  // 状態（データ）と処理を対で管理\n  // obj.method(); -> 結果\n  const numObj = {\n    nums: [1,2,3],\n    sum() {\n      const nums = this.nums;\n      let sumValue = 0;\n      for(let i = 0; i < nums.length; i++) {\n        sumValue += nums[i];\n      }\n      return sumValue;\n    }\n  }\n\n  return (\n    <>\n      <div>オブジェクト指向型:{numObj.sum()}</div>\n      <div>関数型:{sum(nums)}</div>\n    </>\n  )\n};\n\nexport default Example;\n"],"mappings":";;;AAAA,MAAMA,OAAO,GAAGA,CAAA,KAAM;EACpB;EACA;EACA;EACA;EACA,MAAMC,IAAI,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;EACpB,MAAMC,GAAG,GAAIC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAAC,CAACC,IAAI,EAAEC,IAAI,KAAKD,IAAI,GAAGC,IAAI,CAAC;;EAE9D;EACA;EACA;EACA,MAAMC,MAAM,GAAG;IACbN,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC;IACbC,GAAGA,CAAA,EAAG;MACJ,MAAMD,IAAI,GAAG,IAAI,CAACA,IAAI;MACtB,IAAIO,QAAQ,GAAG,CAAC;MAChB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,IAAI,CAACS,MAAM,EAAED,CAAC,EAAE,EAAE;QACnCD,QAAQ,IAAIP,IAAI,CAACQ,CAAC,CAAC;MACrB;MACA,OAAOD,QAAQ;IACjB;EACF,CAAC;EAED,oBACEG,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA;MAAAE,QAAA,GAAK,yDAAU,EAACN,MAAM,CAACL,GAAG,CAAC,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACnCN,OAAA;MAAAE,QAAA,GAAK,qBAAI,EAACX,GAAG,CAACD,IAAI,CAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA,eAC1B,CAAC;AAEP,CAAC;AAACC,EAAA,GA7BIlB,OAAO;AA+Bb,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}