{"ast":null,"code":"var _jsxFileName = \"/Users/shiyo/React/guide/06_control_and_form/src/110_multi_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: \"Apple\",\n    value: 100,\n    checked: false\n  }, {\n    label: \"Banana\",\n    value: 200,\n    checked: false\n  }, {\n    label: \"Cherry\",\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const handleChange = e => {\n    const newFruits = fruits.map(fruit => {\n      console.log(...fruit);\n      const newFruit = {\n        ...fruit\n      };\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruit.checked;\n      }\n      return newFruit;\n    });\n    // checkboxのイベントが変更される\n    setSum(newFruits);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruit => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: false,\n            value: fruit.label,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), fruit.label, \":\", fruit.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, fruit.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"fXrQpGPIkHd+1QektaizVGqb6qE=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","handleChange","e","newFruits","map","fruit","console","log","newFruit","target","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shiyo/React/guide/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n  const [fruits, setFruits] = useState([\n    { label: \"Apple\", value: 100, checked: false },\n    { label: \"Banana\", value: 200, checked: false },\n    { label: \"Cherry\", value: 300, checked: false },\n  ]);\n\n  const [sum, setSum] = useState(0);\n  const handleChange  = (e) =>{\n    const newFruits = fruits.map(fruit =>{\n      console.log(...fruit)\n      const newFruit = {...fruit}\n      if(newFruit.label === e.target.value){\n        newFruit.checked = !fruit.checked\n      }\n      return newFruit\n    })\n    // checkboxのイベントが変更される\n    setSum(newFruits)\n  }\n\n  return (\n    <div>\n      {fruits.map((fruit)=>{\n        return(\n          <div key={fruit.label}>\n            <label>\n              <input\n              type=\"checkbox\"\n              checked={false}\n              value={fruit.label}\n              onChange={handleChange}\n              />\n              {fruit.label}\n              :{fruit.value}\n            </label>\n          </div>\n        )\n      })}\n      <div>合計：{sum}</div>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,CACnC;IAAEO,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAMY,YAAY,GAAKC,CAAC,IAAI;IAC1B,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAACC,KAAK,IAAG;MACnCC,OAAO,CAACC,GAAG,CAAC,GAAGF,KAAK,CAAC;MACrB,MAAMG,QAAQ,GAAG;QAAC,GAAGH;MAAK,CAAC;MAC3B,IAAGG,QAAQ,CAACZ,KAAK,KAAKM,CAAC,CAACO,MAAM,CAACZ,KAAK,EAAC;QACnCW,QAAQ,CAACV,OAAO,GAAG,CAACO,KAAK,CAACP,OAAO;MACnC;MACA,OAAOU,QAAQ;IACjB,CAAC,CAAC;IACF;IACAR,MAAM,CAACG,SAAS,CAAC;EACnB,CAAC;EAED,oBACEZ,OAAA;IAAAmB,QAAA,GACGhB,MAAM,CAACU,GAAG,CAAEC,KAAK,IAAG;MACnB,oBACEd,OAAA;QAAAmB,QAAA,eACEnB,OAAA;UAAAmB,QAAA,gBACEnB,OAAA;YACAoB,IAAI,EAAC,UAAU;YACfb,OAAO,EAAE,KAAM;YACfD,KAAK,EAAEQ,KAAK,CAACT,KAAM;YACnBgB,QAAQ,EAAEX;UAAa;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,EACDX,KAAK,CAACT,KAAK,EAAC,GACZ,EAACS,KAAK,CAACR,KAAK;QAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR;MAAC,GAVAX,KAAK,CAACT,KAAK;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWhB,CAAC;IAEV,CAAC,CAAC,eACFzB,OAAA;MAAAmB,QAAA,GAAK,oBAAG,EAACX,GAAG;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEV,CAAC;AAACvB,EAAA,CA1CID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AA4Cb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}