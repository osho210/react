{"ast":null,"code":"var _jsxFileName = \"/Users/shiyo/React/guide/06_control_and_form/src/130_reminder/start/components/Form.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { customAlphabet } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst charactors = \"1234567890abcdef\";\n// 生成する文字の長さ\nconst length = 5;\nconst nanoid = customAlphabet(charactors, 10);\nconst Form = _ref => {\n  _s();\n  let {\n    TodosLists\n  } = _ref;\n  const [newTodosList, setNewTodosList] = TodosLists;\n  const [value, setValue] = useState(\"\");\n  const addArray = () => {\n    if (value.length === 0) {\n      alert(\"1文字以上\");\n      return;\n    }\n    setNewTodosList([...newTodosList, {\n      id: nanoid(10),\n      content: value\n    }]);\n    setValue(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value,\n      onChange: e => {\n        setValue(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: addArray,\n      value: \"追加\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Form, \"WHwJV1oCj9Db/p/UQjU4Iu9CdI4=\");\n_c = Form;\nexport default Form;\n\n// nonoidというライブラリを利用することで\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["useState","customAlphabet","jsxDEV","_jsxDEV","Fragment","_Fragment","charactors","length","nanoid","Form","_ref","_s","TodosLists","newTodosList","setNewTodosList","value","setValue","addArray","alert","id","content","children","type","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shiyo/React/guide/06_control_and_form/src/130_reminder/start/components/Form.js"],"sourcesContent":["import {useState} from 'react'\nimport { customAlphabet } from 'nanoid';\nconst charactors = \"1234567890abcdef\";\n// 生成する文字の長さ\nconst length = 5;\n\nconst nanoid = customAlphabet(charactors, 10);\n\nconst Form = ({TodosLists}) =>{\n    const [newTodosList, setNewTodosList] = TodosLists\n    const [value,setValue] = useState(\"\")\n\n    const addArray = ()=>{\n        if(value.length===0){\n            alert(\"1文字以上\")\n            return\n        }\n        setNewTodosList([...newTodosList ,{id:nanoid(10),content:value}])\n        setValue(\"\")\n    }\n    return(\n        <>\n        <input type=\"text\" value={value} onChange={(e)=>{setValue(e.target.value)}}/>\n        <input type=\"button\" onClick={addArray} value={\"追加\"}/>\n        </>\n    )\n}\n\nexport default Form;\n\n// nonoidというライブラリを利用することで"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,SAASC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACxC,MAAMC,UAAU,GAAG,kBAAkB;AACrC;AACA,MAAMC,MAAM,GAAG,CAAC;AAEhB,MAAMC,MAAM,GAAGP,cAAc,CAACK,UAAU,EAAE,EAAE,CAAC;AAE7C,MAAMG,IAAI,GAAGC,IAAA,IAAiB;EAAAC,EAAA;EAAA,IAAhB;IAACC;EAAU,CAAC,GAAAF,IAAA;EACtB,MAAM,CAACG,YAAY,EAAEC,eAAe,CAAC,GAAGF,UAAU;EAClD,MAAM,CAACG,KAAK,EAACC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMiB,QAAQ,GAAGA,CAAA,KAAI;IACjB,IAAGF,KAAK,CAACR,MAAM,KAAG,CAAC,EAAC;MAChBW,KAAK,CAAC,OAAO,CAAC;MACd;IACJ;IACAJ,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAE;MAACM,EAAE,EAACX,MAAM,CAAC,EAAE,CAAC;MAACY,OAAO,EAACL;IAAK,CAAC,CAAC,CAAC;IACjEC,QAAQ,CAAC,EAAE,CAAC;EAChB,CAAC;EACD,oBACIb,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACAlB,OAAA;MAAOmB,IAAI,EAAC,MAAM;MAACP,KAAK,EAAEA,KAAM;MAACQ,QAAQ,EAAGC,CAAC,IAAG;QAACR,QAAQ,CAACQ,CAAC,CAACC,MAAM,CAACV,KAAK,CAAC;MAAA;IAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC7E1B,OAAA;MAAOmB,IAAI,EAAC,QAAQ;MAACQ,OAAO,EAAEb,QAAS;MAACF,KAAK,EAAE;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eACpD,CAAC;AAEX,CAAC;AAAAlB,EAAA,CAlBKF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAoBV,eAAeA,IAAI;;AAEnB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}