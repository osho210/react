{"ast":null,"code":"var _jsxFileName = \"/Users/shiyo/React/guide/05_state_and_event/src/050_prev_state/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [val, setVal] = useState(0);\n  const countUp = () => {\n    // 次回のレンダリングの際の値にするという設定を行うだけ\n    setVal(val + 1);\n    setVal(pre => {\n      pre + 1;\n    });\n  };\n  const countDown = () => {\n    setVal(val - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570:\", val]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"XeVoAYDfweeGAwOcym/L9MmPyyI=\");\n_c = Example;\nexport default Example;\n\n// stateの値は予約される、つまり非同期で実行される\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","val","setVal","countUp","pre","countDown","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/shiyo/React/guide/05_state_and_event/src/050_prev_state/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n    const [val, setVal] = useState(0)\n    const countUp = ()=>{\n        // 次回のレンダリングの際の値にするという設定を行うだけ\n        setVal(val + 1)\n        setVal(pre =>{pre +1})\n    }\n    const countDown = () =>{\n        setVal(val - 1)\n    }\n    return(\n    <>\n        <p>現在のカウント数:{val}</p>\n        <button onClick={countUp}>+</button>\n        <button onClick={countDown}>-</button>\n    </>\n    )\n};\n\nexport default Example;\n\n// stateの値は予約される、つまり非同期で実行される\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAMS,OAAO,GAAGA,CAAA,KAAI;IAChB;IACAD,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;IACfC,MAAM,CAACE,GAAG,IAAG;MAACA,GAAG,GAAE,CAAC;IAAA,CAAC,CAAC;EAC1B,CAAC;EACD,MAAMC,SAAS,GAAGA,CAAA,KAAK;IACnBH,MAAM,CAACD,GAAG,GAAG,CAAC,CAAC;EACnB,CAAC;EACD,oBACAL,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACIV,OAAA;MAAAU,QAAA,GAAG,mDAAS,EAACL,GAAG;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBd,OAAA;MAAQe,OAAO,EAAER,OAAQ;MAAAG,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpCd,OAAA;MAAQe,OAAO,EAAEN,SAAU;MAAAC,QAAA,EAAC;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACxC,CAAC;AAEP,CAAC;AAACV,EAAA,CAjBID,OAAO;AAAAa,EAAA,GAAPb,OAAO;AAmBb,eAAeA,OAAO;;AAEtB;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}