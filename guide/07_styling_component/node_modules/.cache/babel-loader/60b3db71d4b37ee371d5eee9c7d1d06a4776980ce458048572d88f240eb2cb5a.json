{"ast":null,"code":"var _jsxFileName = \"/Users/shiyo/React/guide/07_styling_component/src/030_css_module/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport SubButton from \"./components/SubButton\";\nimport \"./Example.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [isSelected, setIsSelected] = useState(false);\n  const clickHandler = () => setIsSelected(prev => !prev);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `btn ${isSelected ? \"selected\" : \"\"}`,\n      onClick: clickHandler,\n      children: \"\\u30DC\\u30BF\\u30F3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SubButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: isSelected && \"クリックされました。\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"5DtxMhs0n+JsbGWNZftSFTxrVZQ=\");\n_c = Example;\nexport default Example;\n\n// cssをcomponentごとに用意する場合は同じ名前のcssを作成する\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","SubButton","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","isSelected","setIsSelected","clickHandler","prev","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","_c","$RefreshReg$"],"sources":["/Users/shiyo/React/guide/07_styling_component/src/030_css_module/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport SubButton from \"./components/SubButton\";\nimport \"./Example.css\";\n\nconst Example = () => {\n  const [isSelected, setIsSelected] = useState(false);\n\n  const clickHandler = () => setIsSelected((prev) => !prev);\n\n  return (\n    <>\n      {/* ボタンがクリックされたタイミングでbooleanの値が入れ替わる */}\n      <button className={`btn ${isSelected ? \"selected\" : \"\"}`} onClick={clickHandler}>\n        ボタン\n      </button>\n      <SubButton />\n      <div style={{ textAlign: \"center\" }}>\n        {isSelected && \"クリックされました。\"}\n      </div>\n    </>\n  );\n};\n\nexport default Example;\n\n// cssをcomponentごとに用意する場合は同じ名前のcssを作成する\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMU,YAAY,GAAGA,CAAA,KAAMD,aAAa,CAAEE,IAAI,IAAK,CAACA,IAAI,CAAC;EAEzD,oBACER,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBAEET,OAAA;MAAQU,SAAS,EAAG,OAAML,UAAU,GAAG,UAAU,GAAG,EAAG,EAAE;MAACM,OAAO,EAAEJ,YAAa;MAAAE,QAAA,EAAC;IAEjF;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTf,OAAA,CAACF,SAAS;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACbf,OAAA;MAAKgB,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAR,QAAA,EACjCJ,UAAU,IAAI;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACX,EAAA,CAjBID,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAmBb,eAAeA,OAAO;;AAEtB;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}